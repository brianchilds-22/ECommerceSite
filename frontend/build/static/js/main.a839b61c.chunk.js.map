{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","components/Header.js","actions/userActions.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/ProductCarousel.js","actions/productActions.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productReviewCreate","success","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","productTopRated","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","dispatch","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","ProductCarousel","useEffect","a","axios","get","data","response","message","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","pageNumber","listProducts","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","varient","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","getState","config","headers","Authorization","token","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","fontSize","padding","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","console","log","payOrder","USerListScreen","App","path","component","exact","UserListScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a839b61c.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\"\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\"\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\"\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\"\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\"\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\"\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\"\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\"\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\"\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\"\r\n\r\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\"\r\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\"\r\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\"\r\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\"\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer, userUpdateProfileReducer } from './reducers/userReducers'\nimport { userRegisterReducer, userDetailsReducer, userListReducer } from './reducers/userReducers'\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productReviewCreate: productReviewCreateReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListMyReducer,\n    productTopRated: productTopRatedReducer,\n\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst initialState = {\n    cart: { \n        cartItems: cartItemsFromStorage, \n        shippingAddress: shippingAddressFromStorage,\n     }, \n    userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n    reducer, \n    initialState, \n    composeWithDevTools(applyMiddleware(...middleware))\n    )\n\nexport default store","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products : [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] }\n        case PRODUCT_LIST_SUCCESS:\n            return { loading: false, products: action.payload.products, pages: action.payload.pages, page: action.payload.page,  }\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        default: \n            return state\n    }\n}\n\nexport const productDetailsReducer = (state = { product : { reviews: [] } }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state }\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload }\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default: \n            return state\n    }\n}\n\nexport const productReviewCreateReducer = (state = { }, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return { loading: true }\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return { loading: false, success: true}\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return { loading: false, error: action.payload }\n        case PRODUCT_CREATE_REVIEW_RESET:\n            return { }\n        default: \n            return state\n    }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_TOP_REQUEST:\n            return { loading: true, products: [] }\n        case PRODUCT_TOP_SUCCESS:\n            return { loading: false, products: action.payload }\n        case PRODUCT_TOP_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default: \n            return state\n    }\n}","import {\r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD \r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find((x) => x.product === item.product )\r\n\r\n            if(existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload),\r\n            }\r\n       \r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            }\r\n        \r\n            case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    USER_LOGIN_FAIL, \r\n    USER_LOGOUT, \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS, \r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_SUCCESS, \r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL, \r\n} from \"../constants/userConstants\"\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return{}\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n    \r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n    \r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {  }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n    \r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n    \r\n        default: \r\n            return state\r\n    }\r\n}\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n    \r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress:{}}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n    \r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading:true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n    \r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        \r\n            case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n    \r\n    default:\r\n        return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n \r\nconst SearchBox = ({ history }) => {\r\nconst [keyword, setKeyword] = useState('')\r\n\r\nconst submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if(keyword.trim()) {\r\n        history.push(`/search/${keyword}`)\r\n    } else {\r\n        history.push('/')\r\n    }\r\n}\r\n    \r\nreturn (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control \r\n            type='text' \r\n            name='q' \r\n            onChange={(e) => setKeyword(e.target.value)}\r\n            placeholder='Search Products...'\r\n            className='mr-sm-2 ml-sm-5'>\r\n            </Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2'>\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport { logout } from '../actions/userActions'\r\nimport SearchBox from './SearchBox'\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n        <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n            <Container>\r\n                <LinkContainer to='/'>\r\n                    <Navbar.Brand>Ecommerce Site</Navbar.Brand>\r\n                </LinkContainer>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Route render={({ history }) => <SearchBox history={history}/>} />\r\n                <Nav className=\"ml-auto\">\r\n                <LinkContainer to='/cart'>\r\n                    <Nav.Link><i className='fas fa-shopping-cart'></i> Cart</Nav.Link>\r\n                </LinkContainer>\r\n                {userInfo ? (\r\n                    <NavDropdown title={userInfo.name} id='username'>\r\n                        <LinkContainer to='/profile'>\r\n                            <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                        </LinkContainer>\r\n                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                ) :\r\n                <LinkContainer to='/login'>\r\n                    <Nav.Link><i className='fas fa-user'></i> Sign In</Nav.Link>\r\n                </LinkContainer>\r\n                 }\r\n                 {userInfo && userInfo.isAdmin && (\r\n                     <NavDropdown title='Admin' id='adminmenu'>\r\n                     <LinkContainer to='/admin/userlist'>\r\n                         <NavDropdown.Item>Users</NavDropdown.Item>\r\n                     </LinkContainer>\r\n                     <LinkContainer to='admin/productlist'>\r\n                         <NavDropdown.Item>Products</NavDropdown.Item>\r\n                     </LinkContainer>\r\n                     <LinkContainer to='admin/orderlist'>\r\n                         <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                     </LinkContainer>\r\n                 </NavDropdown>\r\n                 )}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS, \r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST, \r\n    USER_DETAILS_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n} from \"../constants/userConstants\"\r\nimport { ORDER_LIST_MY_RESET} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const login = ( email, password ) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\r\n        \r\n        dispatch ({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n}\r\n\r\nexport const register = ( name, email, password ) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\r\n        \r\n        dispatch ({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n       \r\n        dispatch ({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config\r\n        )\r\n        \r\n        dispatch ({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n        \r\n        dispatch ({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/`, config)\r\n        \r\n        dispatch ({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; Ecommerce site\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Rating = ({ value, text, color}) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}}\r\n                className={\r\n                    value >= 1 ? 'fas fa-star' : \r\n                    value >= 0.5 ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n            }></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                className={\r\n                    value >= 2 ? 'fas fa-star' : \r\n                    value >= 1.5 ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n            }></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                className={\r\n                    value >= 3 ? 'fas fa-star' : \r\n                    value >= 2.5 ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n            }></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                className={\r\n                    value >= 4 ? 'fas fa-star' : \r\n                    value >= 3.5 ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n            }></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                className={\r\n                    value >= 5 ? 'fas fa-star' : \r\n                    value >= 4.5 ? 'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n            }></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\n\r\n\r\nexport default Rating\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\nimport Rating from './Rating'\n\n\nconst Product = ({ product }) => {\n    return (\n        <Card className='my-3 p-3 rounded'>\n            <Link to={`/product/${product._id}`}>\n                <Card.Img src={product.image} variant='top' />\n            </Link>\n            <Card.Body>\n            <Link to={`/product/${product._id}`}>\n                <Card.Title as='div'>\n                    <strong>{product.name}</strong>\n                </Card.Title>\n                </Link>\n                <Card.Text as='div'>\n                    <Rating \n                    value={product.rating} \n                    text={`${product.numReviews} reviews`}                   \n                    />\n                </Card.Text>\n                <Card.Text as='h3'>${product.price}</Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nMessage.defaultProps = {\n    variant:'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n        <Spinner \n        animation='border' \n        role='status' \n        style={{\n            width: '100px', \n            height: '100px', \n            margin: 'auto', \n            display: 'block',\n            }}\n            >\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin ='false', keyword = '' }) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer key={x + 1} to={keyword ? `/search/${keyword}/page/${x+1}` : `/page/${x+1}`}>\r\n                    <Pagination.Item active={ x + 1 === page}>{ x + 1 }</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector((state) => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return loading ? ( \r\n    <Loader />\r\n    ) : error ? (\r\n     <Message variant='danger'>{error}</Message> \r\n     ) : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map((product) => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                            <h2>\r\n                                {product.name} (${product.price})\r\n                            </h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import axios from 'axios'\nimport { \n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n    } from '../constants/productConstants'\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\n\n        dispatch ({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch ({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch ({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch ({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST,\n         })\n\n        const { userLogin: { userInfo }, } = getState()\n\n        const config = {\n            headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n        dispatch ({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n        })\n\n    } catch (error) {\n        dispatch ({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top`)\n\n        dispatch ({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch ({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description} />\r\n            <meta name='keyword' content={keywords} />\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome To Proshop',\r\n    keywords: 'electronics, buy electronics, electronics on sale',\r\n    description: 'We sell the best products'\r\n}\r\n\r\nexport default Meta\r\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom'  \nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Pagination } from 'react-bootstrap';\nimport Product from '../components/Product';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Paginate from '../components/Paginate';\nimport ProductCarousel from '../components/ProductCarousel';\nimport Meta from '../components/Meta';\nimport { listProducts } from '../actions/productActions';\n\n\n\nconst HomeScreen = ({ match }) => {\n    const keyword = match.params.keyword\n    const pageNumber = match.params.pageNumber || 1\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector((state) => state.productList)\n    const { loading, error, products, page, pages } = productList\n\n    useEffect(() => {\n       dispatch(listProducts(keyword, pageNumber))\n    }, [dispatch, keyword, pageNumber])\n\n\n    return (\n        <> \n       <Meta />\n        {!keyword ? ( \n        <ProductCarousel />\n         ) : (\n         <Link to='/' className='btn btn-dark'>\n             Go Back\n        </Link>\n        )}\n         <h1>Latest Products</h1>\n         {loading ? (\n         <Loader />\n          ) : error ? (\n          <Message variant='danger'>{error}</Message>\n           ) : (\n        <>\n         <Row>\n            {products.map(product => (\n                <Col sm={12} md={6} lg={4} xl={3}>\n                    <Product product={product}/>\n                </Col>\n            ))}\n        </Row>\n        <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''}/>\n        </>\n            )}\n        </>\n    )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Image, ListGroup, Card, Button, ListGroupItem, Form } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Meta from '../components/Meta';\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport {PRODUCT_CREATE_REVIEW_RESET} from '../constants/productConstants'\n// import Message from '../components/Message';\n\n\nconst ProductScreen = ({ history, match }) => {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n    \n    const dispatch = useDispatch()\n\n    const productDetails = useSelector((state) => state.productDetails)\n    const { loading, error, product } = productDetails\n    \n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n    \n    const productReviewCreate = useSelector((state) => state.productReviewCreate)\n    const { \n        success: successProductReview, \n        error: errorProductReview \n    } = productReviewCreate\n\n    \n    useEffect(() => {\n        if (successProductReview) {\n            alert('Review submitted')\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n       dispatch(listProductDetails(match.params.id))\n    }, [dispatch, match, successProductReview])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(match.params.id, {\n            rating,\n            comment\n        }))\n    }\n\n    return (\n        <>\n        <Link className='btn btn-dark my-3' to='/'>Go Back</Link>\n        {loading ? <Loader /> : error ? <Message varient='danger'>{error}</Message> : \n        (\n            <>\n            <Meta title={product.name} />\n           <Row>\n            <Col md={6}>\n                <Image src={product.image} alt={product.name} fluid/>\n            </Col>\n            <Col md={3}>\n                <ListGroup variant='flush'>\n                    <ListGroup.Item>\n                        <h3>{product.name}</h3>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        Price: ${product.price}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        {product.description}\n                    </ListGroup.Item>\n                </ListGroup>\n            </Col>\n            <Col md={3}>\n            <Card>\n                <ListGroup variant='flush'>\n                    <ListGroup.Item>\n                        <Row>\n                            <Col>\n                                Price:\n                            </Col>\n                            <Col>\n                                <stong>${product.price}</stong>\n                            </Col>\n                        </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <Row>\n                            <Col>\n                                Status:\n                            </Col>\n                            <Col>\n                                {product.countInStock > 0 ? 'InStock' : \"Out of Stock\"}\n                            </Col>\n                        </Row>\n                    </ListGroup.Item>\n\n                    {product.countInStock > 0 && (\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Qty</Col>\n                                <Col>\n                                <Form.Control as='select' value={qty} onChange={(e) => \n                                setQty(e.target.value)}>\n                                    {\n                                    [...Array(product.countInStock).keys()].map(x => (\n                                        <option key={x + 1} value={x + 1}>\n                                        {x + 1}\n                                        </option>\n                                    ))}\n                                </Form.Control>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n                    )}\n\n                    <ListGroup.Item>\n                        <Button \n                        onClick={addToCartHandler}\n                        className='btn-block' \n                        type='button' \n                        disabled={product.countInStock === 0}\n                        >\n                        Add to Cart\n                        </Button>\n                    </ListGroup.Item>\n                </ListGroup>\n            </Card>\n            </Col>\n\n        </Row>\n        <Row>\n            <Col md={6}>\n                <h2>Reviews</h2>\n                {product.reviews.length === 0 && <Message>No Reviews</Message>}\n                <ListGroup variant='flush'>\n                    {product.reviews.map(review => (\n                        <ListGroup.Item key={review._id}>\n                            <strong>{review.name}</strong>\n                            <Rating value={review.rating} />\n                            <p>{review.createdAt.substring(0,10)}</p>\n                            <p>{review.comment}</p>\n                        </ListGroup.Item>\n                    ))}\n                    <ListGroup.Item>\n                        <h2>Write a Customer Review</h2>\n                        {errorProductReview && (<Message variant='danger'>{errorProductReview}</Message>)}\n                        {userInfo ? (\n                            <Form onSubmit={submitHandler}>\n                                <Form.Group controlId='rating'>\n                                    <Form.Label>Rating</Form.Label>\n                                    <Form.Control as='select' value={rating} onChange={(e) =>setRating(e.target.value)}>\n                                        <option value=''>Select...</option>\n                                        <option value='1'> 1 - Poor</option>\n                                        <option value='2'> 2 - Fair</option>\n                                        <option value='3'> 3 - Good</option>\n                                        <option value='4'> 4 - Very Good</option>\n                                        <option value='5'> 5 - Excellent</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId='comment'>\n                                    <Form.Label>Comment</Form.Label>\n                                    <Form.Control as='textarea' row='3' value={comment} onChange={(e) => setComment(e.target.value)}></Form.Control>\n                                </Form.Group>\n                                <Button type='submit' variant='primary'>Submit</Button>\n                            </Form>\n                        ) : <Message>Please <Link to='/login'>sign in</Link>to write a review {' '}</Message>}\n                    </ListGroup.Item>\n                </ListGroup>\n            </Col>\n\n        </Row>\n        </>\n        )}\n    </>\n    )\n}\n\nexport default ProductScreen\n// ","import axios from \"axios\"\r\nimport { \r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n     } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch ({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        },\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState ) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n     dispatch(removeFromCart(id))   \r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n            <h1>Shopping Cart</h1>\r\n            {cartItems.length === 0 ? ( \r\n            <Message>\r\n                Your cart is empty <Link to='/'>Go Back</Link>\r\n            </Message> \r\n            ) : (\r\n                <ListGroup variant='flush'>\r\n                    {cartItems.map(item => (\r\n                        <ListGroup.Item key={item.product}>\r\n                            <Row>\r\n                                <Col md={2}>\r\n                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    ${item.price}\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                <Form.Control \r\n                                as='select' \r\n                                value={item.qty} \r\n                                onChange={(e) => dispatch(addToCart(item.product, \r\n                                    Number(e.target.value)))}\r\n                                >\r\n                                    {\r\n                                    [...Array(item.countInStock).keys()].map(x => (\r\n                                        <option key={x + 1} value={x + 1}>\r\n                                        {x + 1}\r\n                                        </option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>\r\n            )}\r\n            </Col>\r\n            <Col md={4}>\r\n                 <Card>\r\n                     <ListGroup variant='flush'>\r\n                         <ListGroup.Item>\r\n                            <h2 style={{\r\n                                fontSize: 24,\r\n                                padding: 2,\r\n                            }}>\r\n                                 Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items\r\n                            </h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                         </ListGroup.Item>\r\n                         <ListGroup.Item>\r\n                             <Button type='button' className=\"btn-block\" disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                                 Proceed to Checkout\r\n                             </Button>\r\n                         </ListGroup.Item>\r\n                     </ListGroup>\r\n                     </Card>                       \r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n       dispatch(login(email, password))\r\n    }\r\n   \r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                    type='email' \r\n                    placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                    type='password' \r\n                    placeholder='Enter password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                New Customer ? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n                </Col>\r\n\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name,email,password))\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control \r\n                    type='name' \r\n                    placeholder='Enter name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                    type='email' \r\n                    placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                    type='password' \r\n                    placeholder='Enter password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm password</Form.Label>\r\n                    <Form.Control \r\n                    type='password' \r\n                    placeholder='Confirm password'\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                Have Account ? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\r\n                </Col>\r\n\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    \r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector((state) => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n    }\r\n   \r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {success && <Message variant='success'>Profile Updated</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control \r\n                    type='name' \r\n                    placeholder='Enter name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                    type='email' \r\n                    placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                    type='password' \r\n                    placeholder='Enter password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm password</Form.Label>\r\n                    <Form.Control \r\n                    type='password' \r\n                    placeholder='Confirm password'\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h3>My Orders</h3>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> :\r\n                (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>ID</tr>\r\n                            <tr>DATE</tr>\r\n                            <tr>TOTAL</tr>\r\n                            <tr>PAID</tr>\r\n                            <tr>DELIVERED</tr>\r\n                            <tr></tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0,10)}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                    <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                )}</td>\r\n                                <td>\r\n                                    {order.isDelivered ? (\r\n                                    order.deliveredAt.substring(0,10) \r\n                                    ) : (\r\n                                    <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm' variant=\"light\">Details</Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n            \r\n           \r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n        \r\n        dispatch ({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n        \r\n        dispatch ({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n        \r\n        dispatch ({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`,config)\r\n        \r\n        dispatch ({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch ({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { Link, LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-conten-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : ( <Nav.Link disabled>Sign In</Nav.Link>\r\n                )} \r\n            </Nav.Item>\r\n            \r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : ( <Nav.Link disabled>Shipping</Nav.Link>\r\n                )} \r\n            </Nav.Item>\r\n            \r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : ( <Nav.Link disabled>Payment</Nav.Link>\r\n                )} \r\n            </Nav.Item>\r\n            \r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : ( <Nav.Link disabled>Place Order</Nav.Link>\r\n                )} \r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","\r\nimport React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions.js'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n\r\n    const [ address, setAddress ] = useState(shippingAddress.address)\r\n    const [ city, setCity ] = useState(shippingAddress.city)\r\n    const [ postalCode, setPostalCode ] = useState(shippingAddress.postalCode)\r\n    const [ country, setCountry ] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control \r\n                    type='text' \r\n                    placeholder='Enter address'\r\n                    value={address}\r\n                    required\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n          \r\n            <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control \r\n                    type='text' \r\n                    placeholder='Enter city'\r\n                    value={city}\r\n                    required\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n          \r\n            <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control \r\n                    type='text' \r\n                    placeholder='Enter postal code'\r\n                    value={postalCode}\r\n                    required\r\n                    onChange={(e) => setPostalCode(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n          \r\n            <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control \r\n                    type='text' \r\n                    placeholder='Enter postal code'\r\n                    value={country}\r\n                    required\r\n                    onChange={(e) => setCountry(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","\r\nimport React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions.js'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    } \r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                \r\n                <Col>\r\n                <Form.Check \r\n                type='radio' \r\n                label='PayPal or Credit Card' \r\n                id='PayPal' \r\n                name='paymentMethod' \r\n                value='PayPal' \r\n                checked \r\n                onChange={(e) => setPaymentMethod(e.target.value)}\r\n                ></Form.Check>\r\n                \r\n                {/* <Form.Check \r\n                type='radio' \r\n                label='Stripe' \r\n                id='Stripe' \r\n                name='paymentMethod' \r\n                value='Stripe' \r\n                checked \r\n                onChange={(e) => setPaymentMethod(e.target.value)}\r\n                ></Form.Check> */}\r\n                \r\n                </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card, ListGroupItem } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart) \r\n\r\n    // calculate prices \r\n    const addDecimals = (num) => {\r\n        return (\r\n            Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc,item) => acc + item.price * item.qty, 0))\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (\r\n    Number(cart.itemsPrice) + \r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n    ).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if(success) {\r\n            history.push(`/order/${order._id}`)\r\n            // dispatch({type: USER_DETAILS_RESET })\r\n            // dispatch({ type: OREDER_CREATE_RESET })\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history,success])\r\n\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>\r\n                                    Address:\r\n                                </strong>\r\n                                {cart.shippingAddress.address},{' '}\r\n                                {cart.shippingAddress.city}, {' '}\r\n                                {cart.shippingAddress.postalCode}{' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message>\r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price} \r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                type='button' \r\n                                className='btn-block' \r\n                                disabled={cart.cartItems === 0}\r\n                                onClick={placeOrderHandler}\r\n                                >Place Order</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card, ListGroupItem } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n    \r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading:loadingPay, success:successPay } = orderPay\r\n\r\n    if(!loading) {\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n\r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce((acc,item) => acc + item.price * item.qty, 0)\r\n            )\r\n            \r\n        order.taxPrice = addDecimals(\r\n            order.orderItems.reduce((acc,item) => acc + item.price * item.qty, 0)\r\n            )\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javscript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (!order || successPay) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        }   else if(!order.isPaid) {\r\n            if(!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n        }, [dispatch, orderId, successPay, order])\r\n\r\n        const successPaymentHandler = (paymentResult) => {\r\n            console.log(paymentResult)\r\n            dispatch(payOrder(orderId,paymentResult))\r\n        }\r\n\r\n   \r\n    return loading ? <Loader /> : error ? \r\n    <Message variant='danger'>{error}</Message>\r\n     : <> <h1>Order {order._id}</h1> \r\n            \r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                            <strong>Name: </strong>{order.user.name}</p>\r\n                            <p>\r\n                            <strong>Email: </strong>{order.user.email}\r\n                            </p>\r\n                            <p>\r\n                            <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>\r\n                                    Address:\r\n                                </strong>\r\n                                {order.shippingAddress.address},{' '}\r\n                                {order.shippingAddress.city}, {' '}\r\n                                {order.shippingAddress.postalCode}{' '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                            <Message variant='success'>Pain on {order.deliveredAt}</Message>\r\n                            ) : (\r\n                                <Message variant='danger'>Not Delivered</Message>)}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                            <strong>Method: </strong>\r\n                            {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                            <Message variant='success'>Pain on {order.paidAt}</Message>\r\n                            ) : (\r\n                                <Message variant='danger'>Not Paid</Message>)}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? ( \r\n                            <Message>Your order is empty</Message> \r\n                            ) : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price} \r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? (\r\n                                    <Loader /> \r\n                                    ) : (\r\n                                        <PayPalButton \r\n                                        amount={order.totalPrice} \r\n                                        onSuccess={successPaymentHandler} \r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        \r\n        </>\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {  Button, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers } from '../actions/userActions'\r\n\r\nconst USerListScreen = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    useEffect(() => {\r\n        dispatch(listUsers())\r\n    },[dispatch])\r\n\r\n    const deleteHandler = (id) => {\r\n        console.log('delete')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? (\r\n\r\n             <Loader /> ) : error ? \r\n             (<Message variant='danger'>{error}</Message> \r\n             ) : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                            <td> {user._id}</td>\r\n                            <td> {user.name}</td>\r\n                            <td> {user.email}</td>\r\n                            <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                            <td>\r\n                                {user.isAdmin ? (<i className='fas fa-check' style={{color: 'green'}}\r\n                                ></i>) : (<i className='fas fa-times' style={{color:'red'}}></i>\r\n                                )}\r\n                            </td>\r\n                            <td>\r\n                                <LinkContainer to={`/user/${user._id}/edit`}>\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                        <i className='fas fa-edit'></i>\r\n                                    </Button>\r\n                                </LinkContainer>\r\n                                <Button variant='danger' className='btn-sm' onClick={() =>\r\n                                deleteHandler(user._id)}>\r\n                                    <i className='fas fa-trash'></i>\r\n                                </Button>\r\n                            </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default USerListScreen\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\n \n\n\nconst App = () => {\n  return (\n    <Router>\n    <Header />\n    <main className='py-3'>\n      <Container>\n        <Route path='/login' component={LoginScreen} />\n        <Route path='/register' component={RegisterScreen} />\n        <Route path='/product/:id' component={ProductScreen} />\n        <Route path='/cart/:id?' component={CartScreen} />\n        <Route path='/' component={HomeScreen}  exact/>\n        <Route path='/page/:pageNumber' component={HomeScreen}  exact/>\n        <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen}  exact/>\n        <Route path='/search/:keyword' component={HomeScreen} exact/>\n        <Route path='/profile' component={ProfileScreen} />\n        <Route path='/shipping' component={ShippingScreen} />\n        <Route path='/payment' component={PaymentScreen} />\n        <Route path='/placeorder' component={PlaceOrderScreen} />\n        <Route path='/order/:id' component={OrderScreen} />\n        <Route path='/admin/userlist' component={UserListScreen} />\n      </Container>\n    </main>\n    <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}